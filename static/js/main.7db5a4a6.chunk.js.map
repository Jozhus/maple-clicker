{"version":3,"sources":["Game/StatWindow.tsx","constants/ExportedConstants.ts","Game/Monster.tsx","Game/Main.tsx","App.tsx","index.tsx"],"names":["StatWindow","className","style","position","Object","values","this","props","charInfo","map","ob","entries","field","value","Row","key","uuid","Col","Component","monsterList","Henesys","name","level","health","physicalDefence","magicalDefence","pdr","attack","loot","dropTable","chance","amount","Monster","state","summonRandomMonster","setState","location","newHealth","getPlayerDamage","die","forEach","type","item","console","log","src","onClick","takeDamage","Main","statWindowOpen","basicInfo","username","class","stats","str","dex","int","luk","detailed","damage","calculateDamage","bind","Fragment","Button","dropLoot","damagePlayer","App","ReactDOM","render","document","getElementById"],"mappings":"oVAOMA,G,6KAEE,OACI,kBAAC,IAAD,KACI,yBACIC,UAAU,aACVC,MAAO,CAAEC,SAAU,aAEnB,yBAAKF,UAAU,WACVG,OAAOC,OAAOC,KAAKC,MAAMC,UAAUC,KAAI,SAACC,GACrC,OAAON,OAAOO,QAAQD,GAAID,KAAI,YAAoC,IAAD,mBAAjCG,EAAiC,KAA1BC,EAA0B,KAC7D,OACI,kBAACC,EAAA,EAAD,CAAKb,UAAU,UAAUc,IAAKC,eAC1B,kBAACC,EAAA,EAAD,CAAKF,IAAKC,eACN,yBAAKf,UAAU,WAAWc,IAAKC,eAC1BJ,IAGT,kBAACK,EAAA,EAAD,CAAKF,IAAKC,eACN,yBAAKf,UAAU,WAAWc,IAAKC,eAC1BH,kB,GApBxBK,c,QCJnBC,EAA4B,CAC9BC,QAAS,CACL,CACIC,KAAM,kBACNC,MAAO,GACPC,OAAQ,IACRC,gBAAiB,EACjBC,eAAgB,GAChBC,IAAK,GACLC,OAAQ,GACRC,KAAM,CACF,aAMVC,EAAwB,CAC1B,OAAU,CACN,CACIR,KAAM,OACNS,OAAQ,GACRC,OAAQ,OClBdC,G,wDACF,WAAYzB,GAAuB,IAAD,8BAC9B,cAAMA,IAED0B,MAAQ,CACTZ,KAAM,GACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,EACjBC,eAAgB,EAChBC,IAAK,EACLC,OAAQ,EACRC,KAAM,IAXoB,E,gEAgB9BtB,KAAK4B,wB,4CAIL5B,KAAK6B,SAAL,eAAmBhB,EAAYb,KAAKC,MAAM6B,UAAU,O,mCAIpD,IAAIC,EAAoB/B,KAAK2B,MAAMV,OAASjB,KAAKC,MAAM+B,kBACnDD,EAAY,GACZ/B,KAAK6B,SAAS,CAAEZ,OAAQ,IACxBjB,KAAKiC,OAELjC,KAAK6B,SAAS,CAAEZ,OAAQc,M,4BAK5B/B,KAAK2B,MAAML,KAAKY,SAAQ,SAACC,GACrBZ,EAAUY,GAAMD,SAAQ,SAACE,GACrBC,QAAQC,IAAIF,EAAKrB,YAGzBf,KAAK4B,wB,+BAGqB,IAAD,OACzB,OACI,yBAAKjC,UAAU,WACX,yBAAKA,UAAU,QACVK,KAAK2B,MAAMV,QAEhB,6BACA,yBACItB,UAAU,QACV4C,IAAI,qFACJC,QAAS,kBAAM,EAAKC,qB,GArDlB7B,cCDhB8B,E,kDACF,WAAYzC,GAAY,IAAD,8BACnB,cAAMA,IAED0B,MAAQ,CACTgB,gBAAgB,EAChBzC,SAAU,CACN0C,UAAW,CACPC,SAAU,SACVC,MAAO,UACP9B,MAAO,KAEX+B,MAAO,CACHC,IAAK,EACLC,IAAK,EACLC,IAAK,KACLC,IAAK,GAETC,SAAU,CACNC,OAAQ,iBAKpB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAvBJ,E,8DA2BnB,OAAO,K,+BAGmB,IAAD,OACzB,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CACIjB,QAAS,WAAQ,EAAKX,SAAS,CAAEc,gBAAiB,EAAKhB,MAAMgB,mBADjE,SAKC3C,KAAK2B,MAAMgB,eACR,kBAAC,EAAD,CACIzC,SAAUF,KAAK2B,MAAMzB,WACpB,KAET,kBAAC,EAAD,CACI4B,SAAU,UACV4B,SAAU,aACV1B,gBAAiBhC,KAAKsD,gBACtBK,aAAc,oB,GAhDf/C,aCFbgD,E,uKAEF,OACE,kBAAC,IAAMJ,SAAP,KACE,kBAAC,EAAD,W,GAJU5C,aCAlBiD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7db5a4a6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { IStatWindowProps } from \"../models/IStatWindowProps\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"../css/StatWindow.css\";\r\n\r\nclass StatWindow extends Component<IStatWindowProps, {}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <Draggable>\r\n                <div\r\n                    className=\"StatWindow\"\r\n                    style={{ position: \"absolute\" }}\r\n                >\r\n                    <div className=\"infoBox\">\r\n                        {Object.values(this.props.charInfo).map((ob: { [key: string]: [string | number] }) => {\r\n                            return Object.entries(ob).map(([field, value]: [string, any]) => {\r\n                                return (\r\n                                    <Row className=\"infoRow\" key={uuid()}>\r\n                                        <Col key={uuid()}>\r\n                                            <div className=\"fieldCol\" key={uuid()}>\r\n                                                {field}\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col key={uuid()}>\r\n                                            <div className=\"valueCol\" key={uuid()}>\r\n                                                {value}\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                );\r\n                            });\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport { StatWindow };","import { IMonsterList } from \"../models/IMonsterList\";\r\nimport { IDropTable } from \"../models/IDropTable\";\r\n\r\nconst monsterList: IMonsterList = {\r\n    Henesys: [\r\n        {\r\n            name: \"Orange Mushroom\",\r\n            level: 10,\r\n            health: 187,\r\n            physicalDefence: 0,\r\n            magicalDefence: 10,\r\n            pdr: 0.1,\r\n            attack: 10,\r\n            loot: [\r\n                \"common\"\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nconst dropTable: IDropTable = {\r\n    \"common\": [\r\n        {\r\n            name: \"meso\",\r\n            chance: 0.5,\r\n            amount: 100\r\n        }\r\n    ]\r\n};\r\n\r\nexport { monsterList, dropTable };","import React, { Component } from \"react\";\r\nimport { IMonsterProps } from \"../models/IMonsterProps\";\r\nimport { IMonsterState } from \"../models/IMonsterState\";\r\nimport { ILoot } from \"../models/ILoot\";\r\nimport { monsterList, dropTable } from \"../constants/ExportedConstants\";\r\nimport \"../css/Monster.css\";\r\n\r\nclass Monster extends Component<IMonsterProps, IMonsterState> {\r\n    constructor(props: IMonsterProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            level: 0,\r\n            health: 0,\r\n            physicalDefence: 0,\r\n            magicalDefence: 0,\r\n            pdr: 0,\r\n            attack: 0,\r\n            loot: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.summonRandomMonster();\r\n    }\r\n\r\n    private summonRandomMonster(): void {\r\n        this.setState({ ...monsterList[this.props.location][0] }); // Randomize later.\r\n    }\r\n\r\n    private takeDamage(): void {\r\n        let newHealth: number = this.state.health - this.props.getPlayerDamage();\r\n        if (newHealth < 0) {\r\n            this.setState({ health: 0 });\r\n            this.die();\r\n        } else {\r\n            this.setState({ health: newHealth });\r\n        }\r\n    }\r\n\r\n    private die(): void {\r\n        this.state.loot.forEach((type: string) => {\r\n            dropTable[type].forEach((item: ILoot) => {\r\n                console.log(item.name);\r\n            });\r\n        }); // Drop random selection from loot table.\r\n        this.summonRandomMonster();\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"Monster\">\r\n                <div className=\"info\">\r\n                    {this.state.health}\r\n                </div>\r\n                <br />\r\n                <img\r\n                    className=\"image\"\r\n                    src=\"https://vignette.wikia.nocookie.net/maplestory/images/0/02/Mob_Orange_Mushroom.png\"\r\n                    onClick={() => this.takeDamage()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Monster };","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { StatWindow } from \"./StatWindow\";\r\nimport { Monster } from \"./Monster\";\r\nimport { IMainState } from \"../models/IMainState\";\r\n\r\nclass Main extends Component<{}, IMainState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statWindowOpen: false,\r\n            charInfo: {\r\n                basicInfo: {\r\n                    username: \"Jozhus\",\r\n                    class: \"Kinesis\",\r\n                    level: 253\r\n                },\r\n                stats: {\r\n                    str: 4,\r\n                    dex: 4,\r\n                    int: 1283,\r\n                    luk: 4\r\n                },\r\n                detailed: {\r\n                    damage: \"10000-10000\"\r\n                }\r\n            }\r\n        };\r\n\r\n        this.calculateDamage = this.calculateDamage.bind(this);\r\n    }\r\n\r\n    private calculateDamage(): number {\r\n        return 54;\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    onClick={() => { this.setState({ statWindowOpen: !this.state.statWindowOpen }) }}\r\n                >\r\n                    Stats\r\n                </Button>\r\n                {this.state.statWindowOpen ?\r\n                    <StatWindow\r\n                        charInfo={this.state.charInfo}\r\n                    /> : null\r\n                }\r\n                <Monster\r\n                    location={\"Henesys\"}\r\n                    dropLoot={() => { }}\r\n                    getPlayerDamage={this.calculateDamage}\r\n                    damagePlayer={() => { }}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Main };","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { Component } from \"react\";\r\nimport { Main } from \"./Game/Main\";\r\n\r\nclass App extends Component {\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Main />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport { App };","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}